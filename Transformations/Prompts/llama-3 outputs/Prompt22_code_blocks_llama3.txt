Code Block 1:
void saxpy(int n, float a, const float* x, float* y) {
  hipLaunchKernel(GLOBAL_KERNEL, dim3(n), dim3(1), 0, 0, 
                   hipKernel, n, a, x, y);
}

Code Block 2:
void saxpy(int n, float a, float* x, float* y) {
  hipLaunchKernel(
    saxpy_kernel, 
    dim3(1), dim3(n), 0, 0, 
    n, a, x, y
  );
}

Code Block 3:
void saxpy(int n, float a, float *x, float *y) {
  hipLaunchKernelGGL(HIP_KERNEL_NAME(saxpy_kernel), dim3(n), dim3(1), 0, 0, n, a, x, y);
}

Code Block 4:
void saxpy(int n, float a, const float *x, float *y) {
  hipLaunchKernel(GPU_saxpy, dim3(1), dim3(256), 0, 0, n, a, x, y);
}

Code Block 5:
void saxpy(int n, float a, const float *x, float *y) {
  hipLaunchKernel(GLOBAL_KERNEL, dim3(n), dim3(1), 0, 0, 
                   kernel_saxpy, n, a, x, y);
}

Code Block 6:
void saxpy(int n, float a, const float *x, float *y) {
  hipLaunchKernel((void (*)(int, float, const float *, float *))my_saxpy_kernel, dim3(1), dim3(n), 0, 0, n, a, x, y);
}

Code Block 7:
void saxpy(int n, float a, const float *x, float *y) {
  hipLaunchKernelGGL(HIP_KERNEL_NAME(saxpy_kernel), dim3(n), dim3(1), 0, 0, n, a, x, y);
}

Code Block 8:
void saxpy(int n, float a, float *x, float *y) {
  hipLaunchKernel(saxpy_kernel, dim3(1), dim3(256), 0, 0, n, a, x, y);
}

Code Block 9:
void saxpy(int n, float a, float* x, float* y) {
  hipLaunchKernelGGL(HIP_KERNEL_NAME(saxpy_kernel), dim3(n), dim3(1), 0, 0, n, a, x, y);
}

Code Block 10:
void saxpy(int n, float a, float *x, float *y) {
  hipLaunchKernel(GLOBAL_KERNEL, dim3(n), dim3(1), 0, 0, n, a, x, y);
}

