--------------- Code Block 1 ---------------
void saxpy(const int n, const float a, const float* x, float* y) {
  Kokkos::parallel_for(n, KOKKOS_LAMBDA (const int i) {
    y[i] = a * x[i] + y[i];
  });
}

--------------- Code Block 2 ---------------
void saxpy(const int n, const float a, const float* x, float* y) {
  Kokkos::parallel_for(Kokkos::RangePolicy<>(0, n), 
    [=](const int i) {
      y[i] = a * x[i] + y[i];
    });
}

--------------- Code Block 3 ---------------
void saxpy(const int n, const float a, const float* x, float* y) {
  Kokkos::parallel_for(Kokkos::RangePolicy<>(0, n), 
    [=](const int i) {
      y[i] = a * x[i] + y[i];
    });
}

--------------- Code Block 4 ---------------
void saxpy(const int n, const float a, const float* x, float* y) {
  Kokkos::parallel_for(Kokkos::RangePolicy<>(0, n), 
    [=](const int i) {
      y[i] = a * x[i] + y[i];
    });
}

--------------- Code Block 5 ---------------
void saxpy(const int n, const float a, const float* x, float* y) {
  Kokkos::parallel_for(Kokkos::RangePolicy<>(0, n), [=](const int i) {
    y[i] = a * x[i] + y[i];
  });
}

--------------- Code Block 6 ---------------
void saxpy(const int n, const float a, const float* x, float* y) {
  Kokkos::RangePolicy<> policy(0, n);
  Kokkos::parallel_for(policy, KOKKOS_LAMBDA(const int i) {
    y[i] = a * x[i] + y[i];
  });
}

--------------- Code Block 7 ---------------
void saxpy(const int n, const float a, const float* x, float* y) {
  Kokkos::parallel_for(Kokkos::RangePolicy<>(0, n), 
    [=](const int i) {
      y[i] = a * x[i] + y[i];
    }
  );
}

--------------- Code Block 8 ---------------
void saxpy(const int n, const float a, const float* x, float* y) {
  Kokkos::parallel_for(Kokkos::RangePolicy<>(0, n), 
    [=](const int i) {
      y[i] = a * x[i] + y[i];
    });
}

--------------- Code Block 9 ---------------
void saxpy(const int n, const float a, const float* x, float* y) {
  Kokkos::parallel_for(Kokkos::RangePolicy<>(0, n), 
    [=](const int i) {
      y[i] = a * x[i] + y[i];
    }
  );
}

--------------- Code Block 10 ---------------
void saxpy(const int n, const float a, const float* x, float* y) {
  Kokkos::parallel_for(Kokkos::RangePolicy<>(0, n), 
    [&](const int i) {
      y[i] = a * x[i] + y[i];
    });
}

