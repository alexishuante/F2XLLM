--------------- Code Block 1 ---------------
void saxpy_parallel(int n, float a, float *x, float *y) {
    #pragma acc kernels loop
    for (int i = 0; i < n; i++) {
        y[i] = a * x[i] + y[i];
    }
}

--------------- Code Block 2 ---------------
void saxpy_parallel(int n, float a, const float *x, float *y) {
    #pragma acc parallel loop
    for (int i = 0; i < n; i++) {
        y[i] = a * x[i] + y[i];
    }
}

--------------- Code Block 3 ---------------
void saxpy_parallel(int n, float a, float *x, float *y) {
    int i;
    #pragma acc kernels loop independent
    for (i = 0; i < n; i++) {
        y[i] = a * x[i] + y[i];
    }
}

--------------- Code Block 4 ---------------
void saxpy_parallel(int n, float a, float *x, float *y) {
    int i;
    #pragma acc parallel loop present(x[:n], y[:n])
    for (i = 0; i < n; i++) {
        y[i] = a * x[i] + y[i];
    }
}

--------------- Code Block 5 ---------------
void saxpy_parallel(int n, float a, float *x, float *y) {
    #pragma acc kernels loop
    for (int i = 0; i < n; i++) {
        y[i] = a * x[i] + y[i];
    }
}

--------------- Code Block 6 ---------------
void saxpy_parallel(int n, float a, float *x, float *y) {
    #pragma acc kernels loop independent
    for (int i = 0; i < n; i++) {
        y[i] = a * x[i] + y[i];
    }
}

--------------- Code Block 7 ---------------
void saxpy_parallel(int n, float a, float *x, float *y) {
    int i;
    #pragma acc parallel loop
    for (i = 0; i < n; i++) {
        y[i] = a * x[i] + y[i];
    }
}

--------------- Code Block 8 ---------------
void saxpy_parallel(int n, float a, float *x, float *y) {
    int i;
    #pragma acc parallel loop
    for (i = 0; i < n; i++) {
        #pragma acc loop
        for (i = 0; i < n; i++) {
            y[i] = a * x[i] + y[i];
        }
    }
}

--------------- Code Block 9 ---------------
void saxpy_parallel(int n, float a, float *x, float *y) {
    #pragma acc parallel loop
    for (int i = 0; i < n; i++) {
        #pragma acc loop
        for (int j = 0; j < 1; j++) {
            y[i] = a * x[i] + y[i];
        }
    }
}

--------------- Code Block 10 ---------------
void saxpy_parallel(int n, float a, float *x, float *y) {
    #pragma acc kernels loop
    for (int i = 0; i < n; i++) {
        y[i] = a * x[i] + y[i];
    }
}

